name: Model Monitoring

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual triggering

jobs:
  monitor:
    name: Monitor Model Performance
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install scikit-learn pandas boto3 requests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Run model monitoring
        run: |
          # Create logs directory if it doesn't exist
          mkdir -p logs
          
          # Run the monitoring script
          python scripts/model_monitoring.py
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}

      - name: Upload monitoring logs
        uses: actions/upload-artifact@v3
        with:
          name: monitoring-logs
          path: logs/model_monitoring.log

      - name: Send monitoring notification
        if: always()
        run: |
          MONITORING_STATUS="${{ job.status }}"
          echo "Model monitoring status: $MONITORING_STATUS"
          
          # Here you could add code to send notifications via Slack, Email, etc.
          # Example for Slack (would need to add SLACK_WEBHOOK_URL to secrets):
          # if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          #   curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Model monitoring $MONITORING_STATUS.\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
          # fi
